<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau_Table_1)' inline='true' name='federated.086u7xk1ugck8f1d8dkp61p7wshs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_1' name='excel-direct.0sytl2e1m47v6g1h37exq1wt2999'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/quinc/OneDrive/Desktop/Data Analyst Portfolio Project/Tableau Excel Files/Tableau_Table_1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0sytl2e1m47v6g1h37exq1wt2999' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='New_Cases' ordinal='0' />
            <column datatype='integer' name='New_Deaths' ordinal='1' />
            <column datatype='real' name='Death_Percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0sytl2e1m47v6g1h37exq1wt2999' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='New_Cases' ordinal='0' />
            <column datatype='integer' name='New_Deaths' ordinal='1' />
            <column datatype='real' name='Death_Percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_Cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>New_Cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D937F17CA0004B438DF58BE5A23AB9FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_Deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>New_Deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D937F17CA0004B438DF58BE5A23AB9FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_Percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Death_Percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_D937F17CA0004B438DF58BE5A23AB9FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.086u7xk1ugck8f1d8dkp61p7wshs].[sum:New_Cases:qk]&quot;' value='Total Cases' />
          <alias key='&quot;[federated.086u7xk1ugck8f1d8dkp61p7wshs].[sum:New_Deaths:qk]&quot;' value='Total Deaths' />
        </aliases>
      </column>
      <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[New_Cases]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[New_Deaths]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D937F17CA0004B438DF58BE5A23AB9FF]' role='measure' type='quantitative' />
      <column-instance column='[New_Cases]' derivation='Sum' name='[sum:New_Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New_Deaths]' derivation='Sum' name='[sum:New_Deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D937F17CA0004B438DF58BE5A23AB9FF'>
            <properties context=''>
              <relation connection='excel-direct.0sytl2e1m47v6g1h37exq1wt2999' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='New_Cases' ordinal='0' />
                  <column datatype='integer' name='New_Deaths' ordinal='1' />
                  <column datatype='real' name='Death_Percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_2)' inline='true' name='federated.1ll4ejb0fpfd7g1enaero0zwg1zi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_2' name='excel-direct.0iqr9cn0nk6zlm1dn7sq81xss198'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/quinc/OneDrive/Desktop/Data Analyst Portfolio Project/Tableau Excel Files/Tableau_Table_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0iqr9cn0nk6zlm1dn7sq81xss198' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0iqr9cn0nk6zlm1dn7sq81xss198' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_37E56E0B525C42B8805D730A2D698560]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_death_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_37E56E0B525C42B8805D730A2D698560]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_37E56E0B525C42B8805D730A2D698560]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_37E56E0B525C42B8805D730A2D698560'>
            <properties context=''>
              <relation connection='excel-direct.0iqr9cn0nk6zlm1dn7sq81xss198' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='total_death_count' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_3)' inline='true' name='federated.07qwxhg01zrkjx14r7t9t1ubgcff' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_3' name='excel-direct.0r8v3q71ryg8d31akr92k1k26km0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/quinc/OneDrive/Desktop/Data Analyst Portfolio Project/Tableau Excel Files/Tableau_Table_3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0r8v3q71ryg8d31akr92k1k26km0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0r8v3q71ryg8d31akr92k1k26km0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DC3462A9927D4004AA0BA8EFA02A1CD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DC3462A9927D4004AA0BA8EFA02A1CD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection_Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DC3462A9927D4004AA0BA8EFA02A1CD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_Population_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_Population_Infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DC3462A9927D4004AA0BA8EFA02A1CD9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[Highest_Infection_Count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_DC3462A9927D4004AA0BA8EFA02A1CD9]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_DC3462A9927D4004AA0BA8EFA02A1CD9'>
            <properties context=''>
              <relation connection='excel-direct.0r8v3q71ryg8d31akr92k1k26km0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='Highest_Infection_Count' ordinal='2' />
                  <column datatype='real' name='Percent_Population_Infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_4)' inline='true' name='federated.197fboz08if7xl16ee2xs17mxhwr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_4' name='excel-direct.0v13b0q0h0irqr19301100ohrwrf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/quinc/OneDrive/Desktop/Data Analyst Portfolio Project/Tableau Excel Files/Tableau_Table_4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0v13b0q0h0irqr19301100ohrwrf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0v13b0q0h0irqr19301100ohrwrf' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
            <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8AB0CD144B4F4CBAA7CB74915EA6A7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8AB0CD144B4F4CBAA7CB74915EA6A7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8AB0CD144B4F4CBAA7CB74915EA6A7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest_Infection_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest_Infection_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Highest_Infection_Count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8AB0CD144B4F4CBAA7CB74915EA6A7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent_Population_Infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent_Population_Infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Percent_Population_Infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_8AB0CD144B4F4CBAA7CB74915EA6A7A0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[Highest_Infection_Count]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_8AB0CD144B4F4CBAA7CB74915EA6A7A0]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_8AB0CD144B4F4CBAA7CB74915EA6A7A0'>
            <properties context=''>
              <relation connection='excel-direct.0v13b0q0h0irqr19301100ohrwrf' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='Highest_Infection_Count' ordinal='3' />
                  <column datatype='real' name='Percent_Population_Infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_1)' name='federated.086u7xk1ugck8f1d8dkp61p7wshs' />
          </datasources>
          <datasource-dependencies datasource='federated.086u7xk1ugck8f1d8dkp61p7wshs'>
            <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[New_Cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[New_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Death_Percentage]' derivation='Sum' name='[sum:Death_Percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_Cases]' derivation='Sum' name='[sum:New_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_Deaths]' derivation='Sum' name='[sum:New_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086u7xk1ugck8f1d8dkp61p7wshs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086u7xk1ugck8f1d8dkp61p7wshs].[sum:Death_Percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086u7xk1ugck8f1d8dkp61p7wshs].[sum:New_Cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.086u7xk1ugck8f1d8dkp61p7wshs].[sum:New_Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.086u7xk1ugck8f1d8dkp61p7wshs].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.086u7xk1ugck8f1d8dkp61p7wshs].[sum:New_Cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.086u7xk1ugck8f1d8dkp61p7wshs].[sum:New_Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.086u7xk1ugck8f1d8dkp61p7wshs].[sum:Death_Percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.086u7xk1ugck8f1d8dkp61p7wshs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.086u7xk1ugck8f1d8dkp61p7wshs].[:Measure Names]' value='208' />
            <format attr='height' value='41' />
            <format attr='color' value='#000000' />
            <format attr='font-size' data-class='subtotal' scope='rows' value='14' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.086u7xk1ugck8f1d8dkp61p7wshs].[:Measure Names]' value='36' />
            <format attr='background-color' value='#ddebf0' />
            <format attr='background-color' scope='cols' value='#ddebf0' />
            <format attr='band-color' scope='rows' value='#f0f7fa' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#000000' />
            <format attr='font-size' scope='cols' value='16' />
            <format attr='text-align' scope='cols' value='center' />
            <format attr='text-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f0f7fa' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#898989' />
            <format attr='stroke-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#898989' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.086u7xk1ugck8f1d8dkp61p7wshs].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.086u7xk1ugck8f1d8dkp61p7wshs].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{ED821B3F-8AE7-45E8-A653-207998166241}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Count by Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_2)' name='federated.1ll4ejb0fpfd7g1enaero0zwg1zi' />
          </datasources>
          <datasource-dependencies datasource='federated.1ll4ejb0fpfd7g1enaero0zwg1zi'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death_count]' derivation='Sum' name='[sum:total_death_count:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1ll4ejb0fpfd7g1enaero0zwg1zi].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ll4ejb0fpfd7g1enaero0zwg1zi].[none:continent:nk]' value='90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ll4ejb0fpfd7g1enaero0zwg1zi].[sum:total_death_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ll4ejb0fpfd7g1enaero0zwg1zi].[sum:total_death_count:qk]</rows>
        <cols>[federated.1ll4ejb0fpfd7g1enaero0zwg1zi].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{EB31DECA-B00A-4721-8CA4-78895CAB0D4E}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_3)' name='federated.07qwxhg01zrkjx14r7t9t1ubgcff' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07qwxhg01zrkjx14r7t9t1ubgcff'>
            <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent_Population_Infected]' derivation='Sum' name='[sum:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[Longitude (generated)]' field-type='quantitative' max='14578402.240977449' min='-18659211.713758584' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[Latitude (generated)]' field-type='quantitative' max='14250741.62528668' min='-6474457.5785458526' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[sum:Percent_Population_Infected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[sum:Percent_Population_Infected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[none:location:nk]' />
              <color column='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[sum:Percent_Population_Infected:qk]' />
              <geometry column='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[Latitude (generated)]</rows>
        <cols>[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{429D1376-B45B-4141-BC48-98D4FF0B93AB}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Percentage of Infected Population </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_4)' name='federated.197fboz08if7xl16ee2xs17mxhwr' />
          </datasources>
          <datasource-dependencies datasource='federated.197fboz08if7xl16ee2xs17mxhwr'>
            <column caption='Percent Population Infected' datatype='real' name='[Percent_Population_Infected]' role='measure' type='quantitative' />
            <column-instance column='[Percent_Population_Infected]' derivation='Avg' name='[avg:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Percent_Population_Infected]' derivation='Avg' forecast-column-base='[avg:Percent_Population_Infected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Percent_Population_Infected:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;South America&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.197fboz08if7xl16ee2xs17mxhwr].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.197fboz08if7xl16ee2xs17mxhwr].[tmn:date:qk]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]' />
              <text column='[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]' />
              <color column='[federated.197fboz08if7xl16ee2xs17mxhwr].[none:Forecast Indicator:nk]' />
              <text column='[federated.197fboz08if7xl16ee2xs17mxhwr].[fVal:avg:Percent_Population_Infected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.197fboz08if7xl16ee2xs17mxhwr].[fVal:avg:Percent_Population_Infected:qk]</rows>
        <cols>[federated.197fboz08if7xl16ee2xs17mxhwr].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{FB0B4A28-BC8D-42FA-BD45-E1C2BAB97EAA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='9' param='horz' type-v2='layout-flow' w='98848' x='576' y='885'>
            <zone h='98230' id='7' type-v2='layout-basic' w='98848' x='576' y='885'>
              <zone h='15376' id='3' name='Sheet 1' w='46292' x='576' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37832' id='5' name='Sheet 2' w='46292' x='576' y='16261'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53208' id='6' name='Sheet 3' w='52556' x='46868' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45022' id='11' name='Sheet 4' w='87870' x='576' y='54093'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='160' h='45022' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='10978' x='88446' y='54093'>
                <zone h='7190' id='10' name='Sheet 3' pane-specification-id='1' param='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[sum:Percent_Population_Infected:qk]' type-v2='color' w='10978' x='88446' y='54093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='33850' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]&#10;[federated.197fboz08if7xl16ee2xs17mxhwr].[none:Forecast Indicator:nk]' type-v2='color' w='10978' x='88446' y='61283'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='15' param='vert' type-v2='layout-flow' w='98848' x='576' y='885'>
                <zone fixed-size='115' h='15376' id='3' is-fixed='true' name='Sheet 1' w='46292' x='576' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53208' id='6' is-fixed='true' name='Sheet 3' w='52556' x='46868' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7190' id='10' name='Sheet 3' pane-specification-id='1' param='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[sum:Percent_Population_Infected:qk]' type-v2='color' w='10978' x='88446' y='54093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37832' id='5' is-fixed='true' name='Sheet 2' w='46292' x='576' y='16261'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45022' id='11' is-fixed='true' name='Sheet 4' w='87870' x='576' y='54093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='33850' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]&#10;[federated.197fboz08if7xl16ee2xs17mxhwr].[none:Forecast Indicator:nk]' type-v2='color' w='10978' x='88446' y='61283'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3D1D5A04-618A-4F9F-BF9E-84D0EA608326}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086u7xk1ugck8f1d8dkp61p7wshs].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA3D8284-6086-4E84-BA28-1187224CF2BB}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ll4ejb0fpfd7g1enaero0zwg1zi].[:Measure Names]</field>
            <field>[federated.1ll4ejb0fpfd7g1enaero0zwg1zi].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D72A4B1-A4C9-4BD6-8277-A4BA05A175AC}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[sum:Percent_Population_Infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[:Measure Names]</field>
            <field>[federated.07qwxhg01zrkjx14r7t9t1ubgcff].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{B99D8C73-87EC-4262-9D51-7D2D99F26E0B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]&#10;[federated.197fboz08if7xl16ee2xs17mxhwr].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.197fboz08if7xl16ee2xs17mxhwr].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.197fboz08if7xl16ee2xs17mxhwr].[none:Forecast Indicator:nk]</field>
            <field>[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]</field>
            <field>[federated.197fboz08if7xl16ee2xs17mxhwr].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BB6BB98-9D61-43BD-8A87-2CB5DFA6A092}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.197fboz08if7xl16ee2xs17mxhwr].[none:Forecast Indicator:nk]</field>
              <field>[federated.197fboz08if7xl16ee2xs17mxhwr].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6615A83D-82F9-4924-A68E-B0B36A8C94AC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Iv9C3LkBzP8HNKWp/N5hDFMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='81' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMYUlEQVR4nO3dzXMbZx0H8O+uVrJeHMW2bMuWJcuW3x0nIU1T2k7TFMpMYdrhwAU4dOgM
      /AVcOXLlzJUrB5iBA2UG+jLQaSmlTmI3sWM7ivym2Na7JUurt93l4MQNGQlYxXIkPd/PTOJR
      orWe1ex3H+3LTz/JMAwDRAKSJEmSn/cgiJ4nBoCExgCQ0BiAFpKMhvGXv/4NmULpqf/REI+l
      kE8dwND1mssaWgXxVLr5g+wwyvMeAD1m4PObd/DW299HYnsdf165j2BwBPe3Y/B4XPjykyW8
      eeMlqKUVZLJ5jE1NY211DeMBL3aSR3DKwOK9Tfz0vXfhdlif98q0Dc4ALUOCyyZhe3cf65EH
      CAX7sbJ8D/3+CRyVqgiNj0HKpxFL5zDudWDxy0Ukj0rIJh5ieOoCioUyQmMBOGyW570ibUXi
      adDWoVWKuB/egj8wgp2dPQRHh1CFFVq1CjUTg+I4D0WR4LBaUJUU7GxtYWjIC5vLjYpawFEm
      hT5fAE4bJ/b/hyRJUlMDYBgGJElq1q8neiZNvw6gaVozfz3RMzM5VxrYjWwgV7HB22NFePsA
      c3OTWFtZQ2BqEnJVQbF4CJ/PB13Xoes6KpVKc0ZOdArMBUCvYDcaQ+/wKNJZFd9Y8OPWvzYw
      8/JlxLbCiN6PYvray5BlGbIso1qtQlH4eZRal7ljAKOKlZU1aHoVsqTAZTegVqyQbQpkCyAX
      gZJFwdxUEBLAAFBLa+gguJjPIlfU0ed2IJ4+gnegF/FYHL39HhgaoGkV2B0OBoBaXtPPAjEA
      1Mp4NygJjwEgoTEAJDQGgIQmzBFqKqcinsmbXs7t7MKw51wTRkStQJgA/H1pC795/7bp5W5c
      DuLnP3ylCSOiVsCPQCQ0BoCExgCQ0BgAEhoDQEJjAEhoDAAJzfR1gOjmBjJFGf7BbkS29zEx
      NY3dzTD8oRCMioRKpQCPx9OMsRKdOtMlkalMFv7xGcT3tzA4NIJS6iE8/gD2ojvIxXPwjI6h
      zzBgPPrTKnXBht7YXd8GWmcd6PSZC4BhYNA7jK3wGoZGAihmH2L/0MDIueM9vixL0J765rKW
      +VaIZxhGy6wDnTqTM4AErayi2zMElw2Il224cGkckfthBELj0L0SyuU8IEmQJQm6rkOWW+Mw
      o9GNWILUMutAp89cACQJvuDEycOLvYMAgNn5+eN/sJ/8RdQWuGsjoTEAJDQGgITGAJDQGAAS
      GgNAQmMASGgMAAmNASChMQAkNAaAhMYAkNAYABIaA0BCM10SGVm/i4Jux0i/E+HtGObmJrC2
      sobRqUmgYkGplIXP52vGWIlOnemSyEQ8gf7gLJKZHBZmvVheXMfktXkktjcRjexh6sqLJx0i
      W6lLpK7p//tJtZYzWmcd6PSZLInUMTF3EQ93tiApdqQSh3D2OJCOJ2FYrPAHAsgeHsI34IbS
      Yl0iZUtjn/ZkSYbVaj3l0VCrMFkRJgNaCR7fGAbP27Eby2B+fhDRaBT+0THoVQPVaqlJQyU6
      faZrgvsGhk8eBf0OAIA/MPrEb+PektoHzwKR0BgAEhoDQEJjAEhoDAAJjQEgoTEAJDQGgITG
      AJDQGAASGgNAQmMASGgMAAmNASChmQ6AXi0hsrWLXOoAt28vIZdXsXr3DnJqAdmsimQy2Yxx
      EjWF6ZLI/egu4hkVWlHCALtEUpszFQC9WsLmThSpXAnBq5egZh/iIPNUl8inNpaW6bDILpFU
      g6kAyIodr772OjKZDBSjjFjpiS6RE8ddIisVdomk9tFQxXpPTw+AGl0iuwB2iaR2wl0bCY0B
      IKExACQ0BoCExgCQ0BgAEhoDQEJjAEhoDAAJjQEgoTEAJDQGgITGAJDQGAASmunbobVyAavh
      KEYHurHBLpF13Y3E8KvffmZ6Of+AG7/82bebMCKqxWSTPAPR3SgqehWJTB4Ls0NYXlzH1LUL
      iG9HjrtEvsAukQBQLFeQyhVNL9ftsLXMeyYCcyWRWgmxeAL7qSN0BX1IJTQ4exxIxRIwlEdd
      IjOH8PWzS6TFYmno9SRJYlfKM2S6JPLFb76CQqGALkX6zy6RAXaJpPbT0O7Z6XQCYJdIan88
      C0RCYwBIaAwACY0BIKExACQ0BoCExgCQ0BgAEhoDQEJjAEhoDAAJjQEgoTEAJDQGgIRmuiJs
      J7IBFQ4M9djwYHsfoalpRDfD8IdCMCoSKpUCPB5Pk4ZLdLpM1wO4z/civbuPh2UZA14fyk93
      iQyyS+Tx6zVWgmkALfOeicB0m1TIMmQL0Ns3gGJ2Dwfpp7pEVtkl8llfsGXeMwHUDUApn8ah
      qqCcT2M4OIrHFa7pZBxdrh44rTjuEnn5cZfIEHQv2CXy8XJyo6+HlnnPRFAnADpufvoRlrYK
      mLmwgJHgo5JHScbY5OzJs9glktpdnV2NjCsvX8eQpxs2xYLGPj0Ttb66c61hVKEWywA3f+pg
      dQOgdHUjMDyIcrl8luMhOlN1AyDJMpwuF1LxOOcA6lh1AyDLVmTTBwhOz/ByMXWsutt2IbMH
      y/kxpHcegJdlqFPVDIChV6HqTvTYVLj6vWjsWy6JWl/NAFRLh/hqZQsXLl9BPhlHYxf1iVpf
      zQAo9j74eoEPPvgYoQuXOANQx6p5JViSJMxevobJ+QoMSDDwTLfSELWs2scAhoF8cge/+/0f
      cXN5jadBqWPVDICuFfDFP5dgsSkolfh9/9S5agbAojjh6bFB0604TKc5A1DHqns7tD80i1Qp
      gn7fKC+EUceqEwAJNsXA3cVVjGvA3Mz48ZkgQ0dkYw1HmoJAfzfCOzHMzU5gbXUNgalJSOwS
      SW2m7gzgOOdBaMoLw2J9YgaQ4D7XjcN4FgfpPBZmvVi+uY7JaxeQ2I4g+uAhJq9cY5dINF7W
      aBhGy7xnIqgbAPUohUg4ieDCeWiPn2hoSKYzKJbKcDssWFp+AF9oFPdu3cbQqB8TcwvIJvcx
      MjjNLpHsEtkWam+dhgFVrcDuKqPfN/b1k2QF0/MXT54Wmjr+6ff5n1jY25SBEjVD7Vshyhl8
      vriBt95+B4lt3gxHnavmDGAYVeTTaSzevI2y1sXToNSxagbAah/Aj9778VmPhejM1QyAVj3C
      h+9/hCKAc30juPHaVV4LoI5U50pwN9548zUcJdJQy+pZj4nozNTdsVcrZTiddmSzBR4DUMeq
      c5LeQCaVxNDEPCrq0dmOiOgM1Z0BjnI5xPajGAjwXiDqXHW2bQmB4Ciq5TJWv7rLkkjqWHWu
      A+iQrU64HBZ09Xg4A1DHqhmAinqATz7dxvzFS1BszrMeE9GZqT0DAFALeeRyOXQ5WRNMnatm
      AGwOL773ziAUhd8HQZ2tzrdCyGiRu5iJmorHtyQ0k/t5HZH1NaRVDYO9TsSTWQSDfoQ3whiZ
      CEGuKlCLWYyPBZszWqJTZjIAEkYCAeh7CZTUI0BWcJRMY+bqFcQ2w9he28bcq6+zJBIsiWwX
      JvsE61heWobb60fv+V6Uyns4KitI3F2Fu9eNsek5pA6iGOqdZEkkSyLbgsmtU8b8xUvQDQl2
      uw2Oc71wOR1QVRV2ux2GcXwRjahdmAuAJMHp6j552K0c76mczicvlvG4mtoHt1YSGgNAQmMA
      SGgMAAmNASChMQAkNAaAhMYAkNAYABIaA0BCa4071eiZVTUd1QbueJVlCTaBK/8YgA7x4eID
      /PoPX5pe7qW5Efzi3etNGFF74EcgEhoDQEJroCTyHuLZEgZ7XTiIJ+EPjmJ7cwfDwQAUzYq8
      msXM9GRzRkt0ykyXRHqHhmDYCtC1Ml64Oo3bn21i4fpVxCL3cf/OAyx86zssicTZl0RqDa6f
      0eD6dQqTJZEalpa+grPPix67hFuL6/BNBXDni0UMjfoxc+VFpKJb8M6xS+RZl0RaGlw/qcH1
      6xQmK8IUvHL9xsnD4MTxT3aJpHbFg2ASGgNAQmMASGgMAAmNASChMQAkNAaAhMYAkNAYABIa
      A0BCYwBIaAwACY0BIKExACQ0BoCEZrJaxUA0vArd7Ye1mMBegl0iqb2Z7xI5MozNQwNascAu
      kf8FSyLbg+mi+L1oFLsZGdO+XhSKj7pE3lmFu8+NsRl2iXyMJZHtwfQM0DM8jstewGG3weXu
      g9NpR1FV0cUukdSGTAfA4XR9vfCjLpEOdomkNsWtlYTGAJDQGAASGgNAQntu5yg3dpOIZwqm
      lwt6z2NkwN2EEZGInlsA/vSPDXx8a9P0cj/57mX8gAGgU8KPQCS0fwMvQv6GGt0wigAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
